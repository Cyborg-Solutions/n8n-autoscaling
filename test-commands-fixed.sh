#!/bin/bash

# üß™ Comandos de Teste do Autoscaler - VERS√ÉO CORRIGIDA
# Problema identificado: autoscaler monitora 'bull:jobs:wait' mas jobs eram adicionados em 'bull:jobs:waiting'

echo "üîç DIAGN√ìSTICO DO PROBLEMA ENCONTRADO:"
echo "‚ùå Autoscaler monitora: bull:jobs:wait"
echo "‚ùå Jobs eram adicionados em: bull:jobs:waiting"
echo "‚úÖ CORRE√á√ÉO: Adicionar jobs na fila correta!"
echo "==========================================\n"

# Encontrar container Redis correto
REDIS_CONTAINER=$(docker ps --format "{{.Names}}" | grep -i redis | grep -v monitor | head -1)

# Se n√£o encontrar, tentar por imagem
if [ -z "$REDIS_CONTAINER" ]; then
    REDIS_CONTAINER=$(docker ps --format "{{.Names}}" --filter "ancestor=redis" | head -1)
fi

echo "üì¶ Container Redis encontrado: $REDIS_CONTAINER"

if [ -z "$REDIS_CONTAINER" ]; then
    echo "‚ùå Nenhum container Redis encontrado!"
    echo "üìã Containers dispon√≠veis:"
    docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Status}}"
    exit 1
fi

# Testar conex√£o Redis com m√©todos alternativos
echo "üîó Testando conex√£o com Redis..."

# M√©todo 1: Tentar redis-cli
if docker exec "$REDIS_CONTAINER" redis-cli ping > /dev/null 2>&1; then
    echo "‚úÖ Redis conectado via redis-cli"
elif docker exec "$REDIS_CONTAINER" /usr/local/bin/redis-cli ping > /dev/null 2>&1; then
    echo "‚úÖ Redis conectado via /usr/local/bin/redis-cli"
elif docker exec "$REDIS_CONTAINER" sh -c "echo 'PING' | nc localhost 6379" 2>/dev/null | grep -q "PONG"; then
    echo "‚úÖ Redis conectado via netcat"
else
    echo "‚ùå Falha na conex√£o com Redis!"
    echo "üìã Tentando listar processos no container:"
    docker exec "$REDIS_CONTAINER" ps aux 2>/dev/null || echo "N√£o foi poss√≠vel listar processos"
    exit 1
fi

echo "‚úÖ Redis conectado com sucesso!\n"

# Verificar filas existentes
echo "üìä Verificando filas existentes..."
if docker exec "$REDIS_CONTAINER" redis-cli -n 2 KEYS "bull:jobs:*" 2>/dev/null | sort; then
    echo ""
elif docker exec "$REDIS_CONTAINER" /usr/local/bin/redis-cli -n 2 KEYS "bull:jobs:*" 2>/dev/null | sort; then
    echo ""
else
    echo "‚ö†Ô∏è  N√£o foi poss√≠vel listar filas (redis-cli n√£o dispon√≠vel)"
fi
echo ""

# Function to check queue size with fallback methods
check_queue_size() {
    local size
    
    # Tentar redis-cli primeiro
    if size=$(docker exec "$REDIS_CONTAINER" redis-cli -n 2 LLEN "bull:jobs:wait" 2>/dev/null); then
        echo "üìä Tamanho atual da fila (bull:jobs:wait): $size jobs"
        return $size
    elif size=$(docker exec "$REDIS_CONTAINER" /usr/local/bin/redis-cli -n 2 LLEN "bull:jobs:wait" 2>/dev/null); then
        echo "üìä Tamanho atual da fila (bull:jobs:wait): $size jobs"
        return $size
    else
        echo "‚ö†Ô∏è  N√£o foi poss√≠vel verificar tamanho da fila (redis-cli n√£o dispon√≠vel)"
        return 0
    fi
}

# Fun√ß√£o para verificar r√©plicas
check_replicas() {
    echo "üîÑ Verificando r√©plicas do N8N Worker..."
    docker service ls | grep n8n_worker
    local replicas=$(docker service ls --format "{{.Replicas}}" --filter "name=n8n_n8n_worker")
    echo "üìà R√©plicas configuradas: $replicas"
}

# Function to add jobs to correct queue with fallback methods
add_test_jobs_correct() {
    local count=$1
    echo "üìà Adicionando $count jobs de teste na fila CORRETA (bull:jobs:wait)..."
    
    # Verificar qual m√©todo de redis-cli funciona
    local redis_cmd="redis-cli"
    if ! docker exec "$REDIS_CONTAINER" redis-cli ping > /dev/null 2>&1; then
        if docker exec "$REDIS_CONTAINER" /usr/local/bin/redis-cli ping > /dev/null 2>&1; then
            redis_cmd="/usr/local/bin/redis-cli"
        else
            echo "‚ùå redis-cli n√£o dispon√≠vel no container. N√£o √© poss√≠vel adicionar jobs."
            return 1
        fi
    fi
    
    for i in $(seq 1 $count); do
        # Adicionar na fila que o autoscaler est√° monitorando
        docker exec "$REDIS_CONTAINER" $redis_cmd -n 2 LPUSH "bull:jobs:wait" "{\"id\":\"test-job-$i\",\"data\":{\"test\":true,\"timestamp\":\"$(date -Iseconds)\",\"job_number\":$i}}"
        
        if [ $((i % 5)) -eq 0 ]; then
            echo "  ‚úì $i jobs adicionados..."
        fi
    done
    
    echo "‚úÖ $count jobs adicionados na fila CORRETA!"
}

# Fun√ß√£o para mostrar logs do autoscaler
show_autoscaler_logs() {
    echo "üìù √öltimos logs do autoscaler:"
    docker service logs --tail 10 autoscaler-n8n_autoscaler
}

# IN√çCIO DOS TESTES
echo "üöÄ INICIANDO TESTES CORRIGIDOS DO AUTOSCALER"
echo "============================================\n"

# Estado inicial
echo "üìä ESTADO INICIAL:"
check_queue_size
check_replicas
echo ""

# Teste de Scale Up
echo "üìà TESTE DE SCALE UP (CORRIGIDO):"
add_test_jobs_correct 25
check_queue_size
echo ""

# Aguardar rea√ß√£o do autoscaler
echo "‚è≥ Aguardando 60 segundos para o autoscaler reagir..."
echo "üí° Dica: Abra outro terminal e execute: docker service logs -f autoscaler-n8n_autoscaler"
echo "üí° Agora os jobs est√£o na fila CORRETA que o autoscaler monitora!"
sleep 60
echo ""

# Verificar resultado
echo "üìä ESTADO AP√ìS 60 SEGUNDOS:"
check_queue_size
check_replicas
show_autoscaler_logs
echo ""

# Teste adicional se ainda n√£o escalou
if current_size=$(docker exec "$REDIS_CONTAINER" redis-cli -n 2 LLEN "bull:jobs:wait" 2>/dev/null) || current_size=$(docker exec "$REDIS_CONTAINER" /usr/local/bin/redis-cli -n 2 LLEN "bull:jobs:wait" 2>/dev/null); then
    if [ "$current_size" -gt 20 ]; then
        echo "üîÑ Fila ainda tem $current_size jobs. Aguardando mais 30 segundos..."
        sleep 30
        echo "\nüìä VERIFICA√á√ÉO FINAL:"
        check_queue_size
        check_replicas
        show_autoscaler_logs
    fi
else
    echo "‚ö†Ô∏è  N√£o foi poss√≠vel verificar tamanho final da fila"
fi

echo "\n‚úÖ Teste corrigido conclu√≠do!"
echo "üìù Para continuar monitorando:"
echo "   - Logs: docker service logs -f autoscaler-n8n_autoscaler"
echo "   - R√©plicas: watch -n 5 'docker service ls | grep n8n_worker'"
echo "   - Fila CORRETA: docker exec $REDIS_CONTAINER redis-cli -n 2 LLEN bull:jobs:wait"
echo "   - Alternativo: docker exec $REDIS_CONTAINER /usr/local/bin/redis-cli -n 2 LLEN bull:jobs:wait"
echo "\nüéØ DIFEREN√áA IMPORTANTE:"
echo "   ‚ùå Antes: bull:jobs:waiting (fila errada)"
echo "   ‚úÖ Agora: bull:jobs:wait (fila que o autoscaler monitora)"