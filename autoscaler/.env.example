# Configurações do Redis
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=minhasenhasegura123
REDIS_DB=0

# Configurações da Fila BullMQ
QUEUE_NAME_PREFIX=bull
QUEUE_NAME=jobs

# Nome do Serviço Docker Swarm
N8N_WORKER_SERVICE_NAME=n8n-worker

# Configurações de Escalonamento
MIN_REPLICAS=1
MAX_REPLICAS=10
SCALE_UP_QUEUE_THRESHOLD=20
SCALE_DOWN_QUEUE_THRESHOLD=5

# Configurações de Timing
POLLING_INTERVAL_SECONDS=30
COOLDOWN_PERIOD_SECONDS=300

# Configurações de Webhook (opcional)
# URL para enviar notificações POST quando ocorrer escalonamento
WEBHOOK_URL=https://seu-endpoint.com/webhook/autoscaler
# Token de autenticação para o webhook
WEBHOOK_TOKEN=seu-token-secreto-aqui

# VERIFICAÇÃO AUTOMÁTICA DE RECURSOS
# O autoscaler agora verifica automaticamente se há recursos suficientes (CPU/memória)
# no Docker Swarm antes de escalar para cima. Esta verificação considera:
# - Limites de recursos definidos no serviço (resources.limits.cpus e resources.limits.memory)
# - Recursos disponíveis nos nós ativos do Swarm
# - Recursos já reservados por outras tarefas em execução
#
# Se não houver recursos suficientes, o escalonamento será cancelado e uma mensagem
# de aviso será registrada nos logs. O escalonamento para baixo não é afetado.
#
# Para que a verificação funcione corretamente, certifique-se de definir limites
# de recursos no seu docker-compose.yml ou stack YAML:
#
# services:
#   n8n-worker:
#     deploy:
#       resources:
#         limits:
#           cpus: "1.0"
#           memory: 1024M